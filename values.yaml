# ------ Backend and DB -------

backend:
  image:
    registry: registry.hub.docker.com
    repository: ttriagebe/ttriage
    tag: latest

  service:
    type: NodePort
    port: 8089
    nodePort: 30200
    #loadBalancerIP:
    
  ttriageEnv:
    googleClientId: "123123" 
    googleClientSecret: "123123"


externalDatabase:
  ## All of these values are only used when postgresql.enabled is set to false
  ## Database host
  host: localhost

  ## non-root Username for Ttriage database
  user: postgres

  ## Database password
  password: changeme

  ## Database port number
  port: 5432

  ## Database name
  dbName: ttriage

##
## PostgreSQL chart configuration
##
## https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
##

postgresql:
#To use an external database set this to false and configure the externalDatabase parameter
  enabled: true
  
  global:
    postgresql:
      postgresqlDatabase: ttriage
      postgresqlUsername: ttriage
      postgresqlPassword: ttriage
      servicePort: 5432
  persistence:
    enabled: true

    ## If you want to reuse an existing claim, you can pass the name of the PVC using
    ## the existingClaim variable
    ##
    # existingClaim: your-claim

    ## postgresql data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi

# -----------------------------

# ------ Frontend  -------

frontend:
  image:
    registry: registry.hub.docker.com
    repository: ttriagefront/ttriage-front
    tag: latest

  service:
    type: ClusterIP
    port: 8081
    #loadBalancerIP:

  ingress:
    enabled: false
    hosts:
      - ttriage.example.com

  # Config file 
  config:
    version: 1
    port: 80
    backEndHost: http://123.123.123.123
    backEndHostPort: 30200
    login:
      google: false
      onelogin: false
      internal: true
